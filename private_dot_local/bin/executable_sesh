#!/bin/bash

if [[ $# -eq 1 ]]; then
    selected=$1
else
    selected=$(
        (
            for dir in ~/Developer/github ~/Developer/igalia ~/projects ~/Developer/nvim_proj ; do
                if test -d "$dir"; then
                    # Only find directories, no recursion into subdirectories
                    find "$dir" -maxdepth 1 -mindepth 1 -type d
                fi
            done

            # Check individual files and directories exist before echoing
            for path in \
                ~/.config/nvim \
                ~/.local/share/chezmoi/ \
                ~/.zshrc \
                ~/.ccache/ccache.conf \
                ~/.local/bin/cadd \
                ~/.local/bin/cinstall \
                ~/.local/bin/cap \
                ~/.local/bin/cpush \
                ~/.local/bin/sesh \
                ~/.local/bin/yabai_reload \
                ~/.local/bin/run_wasm_test_suite.py \
                ~/.config/kitty/kitty.conf \
                ~/.tmux.conf \
                ~/.config/tmux/switch-recent-session.sh \
                ~/.lldbinit \
                ~/.gitconfig \
                ~/.gitconfig-work \
                ~/.config/skhd/skhdrc \
                ~/.config/yabai/yabairc; do
                if test -e "$path"; then
                    echo "$path"
                fi
            done
        ) | fzf
    )
fi

if test -z "$selected"; then
    exit 0
fi

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)

# Start tmux if it is not running
if test -z "$tmux_running"; then
    tmux new-session -d
    tmux_running=$(pgrep tmux)
fi

if ! tmux has-session -t="$selected_name" 2>/dev/null; then
    tmux new-session -d -s "$selected_name" -c "$selected"

    # If it's a file, open it in nvim
    if test -f "$selected"; then
        tmux send-keys -t 0 "nvim \"$selected\"" C-j
    else
        # Otherwise, it's a directory, so open a terminal window
        tmux new-window -c "$selected" -n "terminal_${selected_name}"

        # Split the window vertically (main pane on left)
        tmux split-window -h -c "$selected" -l 33%

        # Split the right pane horizontally
        tmux split-window -v -c "$selected"
        # Select the main (left) pane
        tmux select-pane -t 0

        tmux select-window -t 0
        tmux send-keys -t 1.0 'git status' C-j
        tmux send-keys -t 1.1 'ls' C-j

        tmux send-keys -t 0 'nvim .' C-j 
    fi
fi

# Check if we have active clients when inside tmux
if test -z "$TMUX" || test -z "$(tmux list-clients)"; then
    tmux attach-session -t "$selected_name"
else
    tmux switch-client -t "$selected_name"
fi
